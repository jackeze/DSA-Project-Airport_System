Jackie Zheng and Anthony Polanco

- What ADTs you used and the rationale for your choices
ADT used is QueueCRAB and ListArrayBasedPlus. We used QueueCRAB since we knew that queue is what we should use for airplanes since we only need the beginning and not needed to change anything other than that. It’s also the most efficient compared to the other queue ADTs. ListArrayBased was our choice for storing runways since we need a direct index access. It’s always going to be more than half full and this list uses less memory compared to others when it’s half full. 

 -  What instances of ADTs you used, why you used them and what you used them for
Plane and Runway. We used them for keeping the info such as flight number, destination, and runway in planes. We used them since its the most logical way of containing that information.
The Runway class contains the queueCRAB of planes where we have getters and setters which also contain additional information such as runway name.
 -  for each menu option, present the data flow and the instances affected
1.  Plane enters the system.
Adds a plane into the runway list  by providing planes flight number, destination, the location of which runway it goes to.

2.  Plane takes off.
Each time this is chosen the next available plane gets removed from the runway list. The runway that removes a plane is chosen in a round robin fashion each time this option is pressed the next available plane in the next runway gets removed.  The user can either deny or allow the plane to take off, if the user denies it then it goes to a separate list (waiting list) to await re-entry

3.  Plane is allowed to re-enter a runway.
Ask the user to input a flight number, and runs through the collection to see if the plane is in there. If not, keep prompting the user to enter a plane that exist in the collection. Otherwise, when the collection is empty, it would just display its empty. The Plane that is chosen will re-enter a runway list. 

4.  Runway opens.
Add a new runway into the runway collection by asking the user to provide the name which must not currently exist in the collection.

5.  Runway closes.
Closes the given runway, and adds each plane to an existing runway list depending on where the user wants each plane to go to, by going through the runway collection until all planes are moved out. Once there's no planes left, the runway is removed from the airport.

6.  Display info about planes waiting to take off.
Runs through the list of runaways and display each plane in the runway, and once it displays all the planes in that runway, we move on to the next runway and display the planes until all planes in each of the runway is displayed.

7.  Display info about planes waiting to be allowed to re-enter a runway.
Displays the planes in the waiting list to be re-entered into the runway. It will display all the planes in there and their destination.

8.  Display number of planes who have taken off.
Have a counter variable in the driver and increase the counter when a plane takes off. When option 8 is called, we would just basically print the counter variable.

-    the classes you have used and their functionality
Driver, ListArrayBased, ListArrayBasedPlus, Plane, QueueCRAB, and Runway. Driver does all the user question and input and output. ListArrayBased and ListArrayBasedPlus are ADT are arrays with direct index access which will store the Runway. The plane contains all the information about the flight and destination. The QueueCRAB is a queue that store  the planes and handle the takeoff and adding to the runway. The runway contains the queue crab that can remove and add queue and get/set runwayname.

-    what is the most frequent operation that is expected to be performed during the entire execution of the program and how your choices optimize that frequent operation. The choices could include the choice of a specific ADT or specific implementation.
Most frequent operation is searchRunWay where we would look and see if the runway exists or not, if not, it would return -1 and otherwise would return the index of that runway found. 


